// Code generated by gocc; DO NOT EDIT.

package parser

import (
	"github.com/aggronmagi/wctl/protocol/wproto/bridge"
	"github.com/aggronmagi/wctl/protocol/ast"
)

type (
	ProdTab      [numProductions]ProdTabEntry
	ProdTabEntry struct {
		String     string
		Id         string
		NTType     int
		Index      int
		NumSymbols int
		ReduceFunc func([]Attrib, interface{}) (Attrib, error)
	}
	Attrib interface {
	}
)

var productionsTable = ProdTab{
	ProdTabEntry{
		String: `S' : ProtocolDefine	<<  >>`,
		Id:         "S'",
		NTType:     0,
		Index:      0,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ProtocolDefine : Package Imports Defines	<< bridge.NewProtocol(C, X[0], X[1], X[2]) >>`,
		Id:         "ProtocolDefine",
		NTType:     1,
		Index:      1,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.NewProtocol(C, X[0], X[1], X[2])
		},
	},
	ProdTabEntry{
		String: `OptEnd : empty	<<  >>`,
		Id:         "OptEnd",
		NTType:     2,
		Index:      2,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptEnd : ";"	<<  >>`,
		Id:         "OptEnd",
		NTType:     2,
		Index:      3,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Package : "package" tok_identifier OptEnd	<< bridge.NewPackage(C, X[1]) >>`,
		Id:         "Package",
		NTType:     3,
		Index:      4,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.NewPackage(C, X[1])
		},
	},
	ProdTabEntry{
		String: `Imports : empty	<<  >>`,
		Id:         "Imports",
		NTType:     4,
		Index:      5,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Imports : Imports Import	<<  >>`,
		Id:         "Imports",
		NTType:     4,
		Index:      6,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Import : "import" tok_literal OptEnd	<< bridge.NewImport(C, X[1], "") >>`,
		Id:         "Import",
		NTType:     5,
		Index:      7,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.NewImport(C, X[1], "")
		},
	},
	ProdTabEntry{
		String: `Import : "import" tok_identifier tok_literal OptEnd	<< bridge.NewImport(C, X[2], X[1]) >>`,
		Id:         "Import",
		NTType:     5,
		Index:      8,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.NewImport(C, X[2], X[1])
		},
	},
	ProdTabEntry{
		String: `Defines : empty	<<  >>`,
		Id:         "Defines",
		NTType:     6,
		Index:      9,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Defines : Defines Define	<<  >>`,
		Id:         "Defines",
		NTType:     6,
		Index:      10,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Define : Enum	<<  >>`,
		Id:         "Define",
		NTType:     7,
		Index:      11,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Define : Message	<<  >>`,
		Id:         "Define",
		NTType:     7,
		Index:      12,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Define : OptionExpr	<< bridge.FileOption(C, X[0]) >>`,
		Id:         "Define",
		NTType:     7,
		Index:      13,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.FileOption(C, X[0])
		},
	},
	ProdTabEntry{
		String: `Define : Service	<<  >>`,
		Id:         "Define",
		NTType:     7,
		Index:      14,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Define : Project	<<  >>`,
		Id:         "Define",
		NTType:     7,
		Index:      15,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Enum : "enum" tok_identifier "{" Options "}" OptEnd	<< bridge.NewEnum(C, X[1], X[3]) >>`,
		Id:         "Enum",
		NTType:     8,
		Index:      16,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.NewEnum(C, X[1], X[3])
		},
	},
	ProdTabEntry{
		String: `Message : "message" tok_identifier "{" Fields "}" OptEnd	<< bridge.NewMessage(C, X[1], X[3]) >>`,
		Id:         "Message",
		NTType:     9,
		Index:      17,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.NewMessage(C, X[1], X[3])
		},
	},
	ProdTabEntry{
		String: `Options : empty	<<  >>`,
		Id:         "Options",
		NTType:     10,
		Index:      18,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Options : Options OptionExpr	<< bridge.AppendOption(C, X[0], X[1]) >>`,
		Id:         "Options",
		NTType:     10,
		Index:      19,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.AppendOption(C, X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `OptionExpr : tok_identifier OptionValue OptEnd	<< bridge.OptionExpr(C, X[0], X[1]) >>`,
		Id:         "OptionExpr",
		NTType:     11,
		Index:      20,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.OptionExpr(C, X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `OptionValue : "=" "true"	<< true, nil >>`,
		Id:         "OptionValue",
		NTType:     12,
		Index:      21,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return true, nil
		},
	},
	ProdTabEntry{
		String: `OptionValue : "=" "false"	<< false, nil >>`,
		Id:         "OptionValue",
		NTType:     12,
		Index:      22,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return false, nil
		},
	},
	ProdTabEntry{
		String: `OptionValue : "=" tok_num	<< X[1], nil >>`,
		Id:         "OptionValue",
		NTType:     12,
		Index:      23,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[1], nil
		},
	},
	ProdTabEntry{
		String: `OptionValue : "=" tok_literal	<< X[1], nil >>`,
		Id:         "OptionValue",
		NTType:     12,
		Index:      24,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[1], nil
		},
	},
	ProdTabEntry{
		String: `Fields : empty	<< &ast.YTMessage{},nil >>`,
		Id:         "Fields",
		NTType:     13,
		Index:      25,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return &ast.YTMessage{},nil
		},
	},
	ProdTabEntry{
		String: `Fields : Fields FieldExpr	<< bridge.FieldField(C, X[0], X[1]) >>`,
		Id:         "Fields",
		NTType:     13,
		Index:      26,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.FieldField(C, X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `Fields : Fields OptionExpr	<< bridge.FieldOption(C, X[0], X[1]) >>`,
		Id:         "Fields",
		NTType:     13,
		Index:      27,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.FieldOption(C, X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `Fields : Fields Message	<< bridge.FieldMessage(C, X[0], X[1]) >>`,
		Id:         "Fields",
		NTType:     13,
		Index:      28,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.FieldMessage(C, X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `FieldExpr : FieldType tok_identifier "=" tok_num FieldOption OptEnd	<< bridge.NewField(C,X[0], X[1], X[3], X[4]) >>`,
		Id:         "FieldExpr",
		NTType:     14,
		Index:      29,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.NewField(C,X[0], X[1], X[3], X[4])
		},
	},
	ProdTabEntry{
		String: `FieldOption : empty	<<  >>`,
		Id:         "FieldOption",
		NTType:     15,
		Index:      30,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `FieldOption : "{" Options "}"	<< X[1], nil >>`,
		Id:         "FieldOption",
		NTType:     15,
		Index:      31,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[1], nil
		},
	},
	ProdTabEntry{
		String: `FieldType : "map" "<" tok_identifier "," tok_identifier ">"	<< bridge.MapType(C, X[2], X[4]) >>`,
		Id:         "FieldType",
		NTType:     16,
		Index:      32,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.MapType(C, X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `FieldType : "map" "[" tok_identifier "]" tok_identifier	<< bridge.MapType(C, X[2], X[4]) >>`,
		Id:         "FieldType",
		NTType:     16,
		Index:      33,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.MapType(C, X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `FieldType : "repeated" tok_identifier	<< bridge.ArrayType(C, X[1]) >>`,
		Id:         "FieldType",
		NTType:     16,
		Index:      34,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.ArrayType(C, X[1])
		},
	},
	ProdTabEntry{
		String: `FieldType : tok_identifier	<< bridge.BasicOrCustomType(C, X[0]) >>`,
		Id:         "FieldType",
		NTType:     16,
		Index:      35,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.BasicOrCustomType(C, X[0])
		},
	},
	ProdTabEntry{
		String: `Service : "service" tok_identifier "{" ServiceElements "}" OptEnd	<< bridge.NewService(C, X[1], X[3]) >>`,
		Id:         "Service",
		NTType:     17,
		Index:      36,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.NewService(C, X[1], X[3])
		},
	},
	ProdTabEntry{
		String: `ServiceElements : empty	<< &ast.YTService{}, nil >>`,
		Id:         "ServiceElements",
		NTType:     18,
		Index:      37,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return &ast.YTService{}, nil
		},
	},
	ProdTabEntry{
		String: `ServiceElements : ServiceElements ServiceMethod	<< bridge.ServiceMethod(C, X[0], X[1]) >>`,
		Id:         "ServiceElements",
		NTType:     18,
		Index:      38,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.ServiceMethod(C, X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `ServiceElements : ServiceElements OptionExpr	<< bridge.ServiceOption(C, X[0], X[1]) >>`,
		Id:         "ServiceElements",
		NTType:     18,
		Index:      39,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.ServiceOption(C, X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `ServiceElements : ServiceElements MethodFlag	<< bridge.ServiceFlag(C, X[0], X[1]) >>`,
		Id:         "ServiceElements",
		NTType:     18,
		Index:      40,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.ServiceFlag(C, X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `MethodFlag : "call" ":"	<< X[0], nil >>`,
		Id:         "MethodFlag",
		NTType:     19,
		Index:      41,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MethodFlag : "notify" ":"	<< X[0], nil >>`,
		Id:         "MethodFlag",
		NTType:     19,
		Index:      42,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ServiceMethod : tok_identifier "(" tok_identifier ")" tok_identifier MethodNo FieldOption OptEnd	<< bridge.NewMethod(C, X[0], X[2], X[4], X[5], X[6]) >>`,
		Id:         "ServiceMethod",
		NTType:     20,
		Index:      43,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.NewMethod(C, X[0], X[2], X[4], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `MethodNo : empty	<<  >>`,
		Id:         "MethodNo",
		NTType:     21,
		Index:      44,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `MethodNo : "=" tok_num	<< X[1], nil >>`,
		Id:         "MethodNo",
		NTType:     21,
		Index:      45,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[1], nil
		},
	},
	ProdTabEntry{
		String: `Project : "project" tok_identifier "{" ProjElements "}" OptEnd	<< bridge.NewProject(C, X[1], X[3]) >>`,
		Id:         "Project",
		NTType:     22,
		Index:      46,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.NewProject(C, X[1], X[3])
		},
	},
	ProdTabEntry{
		String: `ProjElements : empty	<< &ast.YTProject{}, nil >>`,
		Id:         "ProjElements",
		NTType:     23,
		Index:      47,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return &ast.YTProject{}, nil
		},
	},
	ProdTabEntry{
		String: `ProjElements : ProjElements ProjArea	<< bridge.ProjectArea(C, X[0], X[1]) >>`,
		Id:         "ProjElements",
		NTType:     23,
		Index:      48,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.ProjectArea(C, X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `ProjElements : ProjElements OptionExpr	<< bridge.ProjectOption(C, X[0], X[1]) >>`,
		Id:         "ProjElements",
		NTType:     23,
		Index:      49,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return bridge.ProjectOption(C, X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `ProjArea : tok_identifier ":"	<< X[0], nil >>`,
		Id:         "ProjArea",
		NTType:     24,
		Index:      50,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
}
